/**
 * Script pour migrer tous les programmes mock vers la base de donn√©es
 * avec la structure r√©glementaire compl√®te
 */

import { MongoClient } from 'mongodb'
import dotenv from 'dotenv'
import path from 'path'
import { MOCK_PROGRAMMES } from '@/data/mock-data'

dotenv.config({ path: path.resolve(__dirname, '../../.env.local') })

async function migrateAllMockProgrammes() {
  console.log('üîÑ Migration de tous les programmes mock vers la base de donn√©es...')

  const mongoUri = process.env['MONGODB_URI']
  if (!mongoUri) {
    console.error("‚ùå MONGODB_URI n'est pas d√©fini dans .env.local")
    return
  }

  let client: MongoClient | undefined
  try {
    client = new MongoClient(mongoUri)
    await client.connect()
    console.log('‚úÖ Connexion MongoDB √©tablie')

    const db = client.db()
// const programmesCollection = db.collection('programmes') // Removed: unused variable
    const formationProgrammesCollection = db.collection('formation_programmes')

    console.log(`üìã ${MOCK_PROGRAMMES.length} programmes mock √† migrer`)

    let migratedCount = 0
    let skippedCount = 0

    for (const mockProgramme of MOCK_PROGRAMMES) {
      try {
        // V√©rifier si le programme existe d√©j√† dans formation_programmes
        const existingProgramme = await formationProgrammesCollection.findOne({
          code_formation: mockProgramme.codeFormation,
        })

        if (existingProgramme) {
          console.log(`‚ö†Ô∏è Programme ${mockProgramme.codeFormation} existe d√©j√† - ignor√©`)
          skippedCount++
          continue
        }

        // Cr√©er la structure r√©glementaire √† partir du programme mock
        const baseProgramme = {
          title: mockProgramme.titre,
          code_formation: mockProgramme.codeFormation,
          statut: mockProgramme.statut === 'PUBLIE' ? 'PUBLIE' : 'BROUILLON',

          // Objectifs g√©n√©riques bas√©s sur le titre et la description
          objectifs: {
            root: {
              type: 'root',
              children: [
                {
                  type: 'p',
                  children: [
                    {
                      type: 'text',
                      text: `Ma√Ætriser les comp√©tences essentielles en ${mockProgramme.titre.split(' ')[0]}`,
                    },
                  ],
                },
                {
                  type: 'p',
                  children: [
                    {
                      type: 'text',
                      text: mockProgramme.description,
                    },
                  ],
                },
              ],
            },
          },

          // Structure programme d√©taill√©e g√©n√©rique
          programme_detail: [
            {
              jour: 'Jour 1',
              duree: `${Math.ceil(mockProgramme.duree / 2)} heures`,
              modules: [
                {
                  titre: 'Introduction et bases',
                  description: 'D√©couverte des concepts fondamentaux',
                  duree: `${Math.ceil(mockProgramme.duree / 4)}h`,
                  contenu: {
                    root: {
                      type: 'root',
                      children: [
                        {
                          type: 'p',
                          children: [
                            {
                              type: 'text',
                              text: '‚Ä¢ Introduction aux concepts de base',
                            },
                          ],
                        },
                        {
                          type: 'p',
                          children: [
                            {
                              type: 'text',
                              text: '‚Ä¢ Pr√©sentation des outils et technologies',
                            },
                          ],
                        },
                      ],
                    },
                  },
                },
                {
                  titre: 'Mise en pratique',
                  description: 'Application des connaissances acquises',
                  duree: `${Math.ceil(mockProgramme.duree / 4)}h`,
                  contenu: {
                    root: {
                      type: 'root',
                      children: [
                        {
                          type: 'p',
                          children: [
                            {
                              type: 'text',
                              text: '‚Ä¢ Exercices pratiques guid√©s',
                            },
                          ],
                        },
                        {
                          type: 'p',
                          children: [
                            {
                              type: 'text',
                              text: "‚Ä¢ Cas d'usage concrets",
                            },
                          ],
                        },
                      ],
                    },
                  },
                },
              ],
            },
          ],
        }

        // Si c'est une formation de 2 jours, ajouter le jour 2
        if (mockProgramme.duree > 7) {
          baseProgramme.programme_detail.push({
            jour: 'Jour 2',
            duree: `${Math.ceil(mockProgramme.duree / 2)} heures`,
            modules: [
              {
                titre: 'Approfondissement',
                description: 'Approfondissement des comp√©tences',
                duree: `${Math.ceil(mockProgramme.duree / 4)}h`,
                contenu: {
                  root: {
                    type: 'root',
                    children: [
                      {
                        type: 'p',
                        children: [
                          {
                            type: 'text',
                            text: '‚Ä¢ Techniques avanc√©es',
                          },
                        ],
                      },
                      {
                        type: 'p',
                        children: [
                          {
                            type: 'text',
                            text: '‚Ä¢ Optimisation et bonnes pratiques',
                          },
                        ],
                      },
                    ],
                  },
                },
              },
              {
                titre: 'Projet final',
                description: 'Mise en application compl√®te',
                duree: `${Math.ceil(mockProgramme.duree / 4)}h`,
                contenu: {
                  root: {
                    type: 'root',
                    children: [
                      {
                        type: 'p',
                        children: [
                          {
                            type: 'text',
                            text: "‚Ä¢ R√©alisation d'un projet complet",
                          },
                        ],
                      },
                      {
                        type: 'p',
                        children: [
                          {
                            type: 'text',
                            text: '‚Ä¢ Pr√©sentation et √©valuation',
                          },
                        ],
                      },
                    ],
                  },
                },
              },
            ],
          })
        }

        const formationProgramme = {
          ...baseProgramme,

          modalites_acces: {
            prerequis:
              'Ma√Ætriser son environnement et les fonctions de base pour utiliser un ordinateur.',
            public_concerne: 'Artisans, commer√ßants, professions lib√©rales et entrepreneurs.',
            duree: `${mockProgramme.duree} heures`,
            horaires: '9h √† 13h et de 14h √† 17h',
            delais_mise_en_place: "D√®s r√©ception de l'accord de prise en charge",
            tarif: mockProgramme.prix,
            modalites_reglement: 'Ch√®que ou virement √† r√©ception de facture',
          },

          contact_formateur: {
            nom: 'Aur√©lien LAVAYSSIERE',
            email: 'aurelien@gestionmax.fr',
            telephone: '06.46.02.24.68',
            role: 'Consultant formateur en informatique de gestion',
            biographie:
              "Aur√©lien LAVAYSSIERE est un consultant formateur en informatique de gestion, sp√©cialis√© dans la formation des adultes. Dot√© d'une solide exp√©rience dans le domaine de la formation, Aur√©lien poss√®de une expertise approfondie en mati√®re de technologies web et de gestion d'entreprise.",
          },

          modalites_pedagogiques: {
            root: {
              type: 'root',
              children: [
                {
                  type: 'p',
                  children: [
                    {
                      type: 'text',
                      text: "Formation en pr√©sentiel individuel (m√©thode expositive et d√©monstrative) avec alternance d'expos√©s th√©oriques et de cas pratiques. Cette m√©thode permet de varier les modes d'apprentissage pour favoriser l'acquisition des connaissances et des comp√©tences.",
                    },
                  ],
                },
              ],
            },
          },

          ressources_dispo: [
            {
              ressource: 'Salle de formation √©quip√©e',
              description: 'Mat√©riel informatique haut de gamme connect√©e √† internet',
            },
            {
              ressource: 'Support de cours',
              description: 'Ressources t√©l√©chargeables, quizz, fiches pratiques',
            },
          ],

          modalites_evaluation: {
            types_evaluation: [
              {
                type: 'Quizz',
                description: '√âvaluation des connaissances th√©oriques',
              },
              {
                type: 'Travaux pratiques',
                description: 'Mise en application des comp√©tences acquises',
              },
            ],
            plateforme_evaluation: 'EVALBOX',
            grille_analyse: "Grille d'analyse des comp√©tences, travaux pratiques",
          },

          sanction_formation:
            "Certificat de r√©alisation de formation. Une feuille d'√©margement individuelle sera conjointement sign√©e par le formateur et chaque stagiaire, pour chaque demi-journ√©e de formation, permettant d'attester de l'ex√©cution de l'action de formation.",

          niveau_certification: 'Aucune',

          accessibilite_handicap: {
            referent_handicap: 'Aur√©lien LAVAYSSIERE',
            contact_referent: 'aurelien@gestionmax.fr ‚Äì 06.46.02.24.68',
            adaptations_proposees:
              "Entretien t√©l√©phonique pour √©valuer les besoins sp√©cifiques au regard d'une situation de handicap, mise en ≈ìuvre des adaptations p√©dagogiques, organisationnelles et mat√©rielles n√©cessaires.",
          },

          cessation_abandon: {
            conditions_renonciation:
              "En cas de renonciation de l'apprenant(e) avant le d√©but de la formation, aucune facturation",
            facturation_abandon:
              "En cas de renonciation en cours de formation, la facturation se fera au prorata de l'assiduit√© de l'apprenant(e).",
          },
        }

        // Ins√©rer le programme dans la collection formation_programmes
        await formationProgrammesCollection.insertOne(formationProgramme)

        console.log(`‚úÖ Programme migr√©: ${mockProgramme.codeFormation} - ${mockProgramme.titre}`)
        migratedCount++
      } catch (error: any) {
        console.error(
          `‚ùå Erreur lors de la migration du programme ${mockProgramme.codeFormation}:`,
          error.message
        )
      }
    }

    console.log(`\nüìä R√©sum√© de la migration:`)
    console.log(`   ‚úÖ Programmes migr√©s: ${migratedCount}`)
    console.log(`   ‚ö†Ô∏è Programmes ignor√©s: ${skippedCount}`)
    console.log(`   üìã Total programmes mock: ${MOCK_PROGRAMMES.length}`)

    // V√©rifier le nombre total de programmes dans la base
    const totalProgrammes = await formationProgrammesCollection.countDocuments()
    console.log(`   üóÑÔ∏è Total programmes en base: ${totalProgrammes}`)
  } catch (error: any) {
    console.error('‚ùå Erreur lors de la migration:', error)
  } finally {
    if (client) {
      await client.close()
    }
  }
}

migrateAllMockProgrammes()
