import { config } from 'dotenv'

// Charger les variables d'environnement
config({ path: '.env.local' })

const verifyCollections = () => {
  console.log('üîç V√©rification des collections Payload CMS...')
  console.log('üîë PAYLOAD_SECRET:', process.env['PAYLOAD_SECRET'] ? '‚úÖ D√©fini' : '‚ùå Manquant')
  console.log('üóÑÔ∏è MONGODB_URI:', process.env['MONGODB_URI'] ? '‚úÖ D√©fini' : '‚ùå Manquant')

  // Liste des collections attendues
  const expectedCollections = [
    'users',
    'formations',
    'apprenants',
    'articles',
    'categories',
    'tags',
    'programmes',
    'rendez-vous',
    'contacts',
    'media',
  ]

  console.log('\nüìã Collections attendues:')
  expectedCollections.forEach(collection => {
    console.log(`   ‚úÖ ${collection}`)
  })

  console.log("\nüîß Variables d'environnement:")
  console.log(`   NODE_ENV: ${process.env.NODE_ENV || 'non d√©fini'}`)
  console.log(`   NEXT_PUBLIC_APP_NAME: ${process.env.NEXT_PUBLIC_APP_NAME || 'non d√©fini'}`)
  console.log(`   NEXT_PUBLIC_APP_URL: ${process.env.NEXT_PUBLIC_APP_URL || 'non d√©fini'}`)
  console.log(
    `   NEXT_PUBLIC_USE_MOCK_DATA: ${process.env.NEXT_PUBLIC_USE_MOCK_DATA || 'non d√©fini'}`
  )

  console.log('\nüí° Prochaines √©tapes:')
  console.log('   1. Installer MongoDB si pas d√©j√† fait')
  console.log('   2. D√©marrer MongoDB')
  console.log('   3. Ex√©cuter le script de migration des donn√©es')
  console.log("   4. Tester les collections via l'interface Payload")

  console.log('\nüéâ V√©rification termin√©e!')
}

// Ex√©cuter la v√©rification
verifyCollections()
